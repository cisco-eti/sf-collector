#
# Copyright (C) 2022 IBM Corporation.
#
# Authors:
# Frederico Araujo <frederico.araujo@ibm.com>
# Teryl Taylor <terylt@ibm.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ARG FALCO_VER
ARG FALCO_LIBS_VER
ARG UBI_VER

#-----------------------
# Stage: builder
#-----------------------
#FROM ghcr.io/sysflow-telemetry/libs/libs:e917398ae610843f0befdffc662dbe15eff0d805@sha256:00381f99e4312ed3f9049271225180bea37461ab369c160824258c97c4ae7284 as builder
FROM  ghcr.io/sysflow-telemetry/libs-base-images/libs:39ae7d40496793cf3d3e7890c9bbdc202263836b as builder
ARG INSTALL_PATH=/usr/local/sysflow

COPY ./modules/avro /build/modules/avro
COPY ./modules/filesystem /build/modules/filesystem
COPY ./modules/sysflow /build/modules/sysflow
COPY ./modules/dkms /build/modules/dkms
COPY ./modules/elfutils /build/modules/elfutils
COPY ./modules/glog /build/modules/glog
COPY ./modules/snappy /build/modules/snappy
COPY ./modules/Makefile /build/modules/Makefile
COPY ./makefile.* /build/
RUN  apt-get update && apt-get install -y libboost-all-dev flex bison gawk libsparsehash-dev && cd /build/modules && \
     make INSTALL_PATH=${INSTALL_PATH} install


# environment and build args
ARG BUILD_NUMBER=0
ARG DEBUG=1

ARG INSTALL_PATH=/usr/local/sysflow

ARG MODPREFIX=${INSTALL_PATH}/modules
ARG falcoprefix=/usr/
ENV FALCOPREFIX=$falcoprefix

ENV LIBRARY_PATH=/lib64


# build sysporter
COPY ./modules/sysflow/avro/avsc  /build/modules/sysflow/avro/avsc
COPY ./modules/sysflow/c\+\+/sysflow/sysflow.hh ${MODPREFIX}/include/sysflow/c\+\+/sysflow/sysflow.hh
COPY ./modules/sysflow/c\+\+/sysflow/avsc_sysflow3.hh ${MODPREFIX}/include/sysflow/c\+\+/sysflow/avsc_sysflow3.hh
COPY ./src/ /build/src/
RUN cd /build/src && \
    make SYSFLOW_BUILD_NUMBER=$BUILD_NUMBER \
         LIBLOCALPREFIX=${FALCOPREFIX} \
         SDLOCALLIBPREFIX=/usr/lib/x86_64-linux-gnu/falcosecurity/ \
         SDLOCALINCPREFIX=/usr/include/falcosecurity/ \
         AVRLOCALLIBPREFIX=${MODPREFIX}/lib \
         AVRLOCALINCPREFIX=${MODPREFIX}/include \
         SFLOCALINCPREFIX=${MODPREFIX}/include/sysflow/c++ \
         FSLOCALINCPREFIX=${MODPREFIX}/include/filesystem \
         SCHLOCALPREFIX=${MODPREFIX}/conf \
	 DEBUG=${DEBUG} \
         install
    #make clean && \
    #rm -rf /build

RUN cd /build/src/libs && bash ./make.sh && bash ./maketest.sh

#-----------------------
# Stage: Runtime
#-----------------------
FROM ghcr.io/sysflow-telemetry/libs-base-images/runtime-ubi:8.6-754-39ae7d40496793cf3d3e7890c9bbdc202263836b AS runtime

ARG FALCO_VER
ARG FALCO_LIBS_VER
# environment variables
ARG interval=30
ENV INTERVAL=$interval

ARG filter=
ENV FILTER=$filter

ARG falcoprefix=/usr/local/falcolibs/
ENV FALCOPREFIX=$falcoprefix

ENV DRIVERPREFIX=/usr/src/falco-

ARG exporterid="local"
ENV EXPORTER_ID=$exporterid

ARG output=
ENV OUTPUT=$output

ARG cripath=
ENV CRI_PATH=$cripath

ARG critimeout=
ENV CRI_TIMEOUT=$critimeout

ARG debug=
ENV DEBUG=$debug

ARG gllogtostderr=1
ENV GLOG_logtostderr=$gllogtostderr

ARG glv=
ENV GLOG_v=$glv

ARG INSTALL_PATH=/usr/local/sysflow

ARG MODPREFIX=${INSTALL_PATH}/modules
ENV HOST_ROOT=/host

ARG sockfile=
ENV SOCK_FILE=

ARG VERSION=dev
ARG RELEASE=dev

ARG nodeip=
ENV NODE_IP=$nodeip

ENV FALCO_VERSION=${FALCO_VER}
ENV FALCO_LIBS_VERSION=${FALCO_LIBS_VER}

ENV DRIVER_NAME="falco"

ARG samplingRate=
ENV SAMPLING_RATE=$samplingRate

ARG dropMode=
ENV ENABLE_DROP_MODE=$dropMode

ENV DRIVERS_REPO="https://download.falco.org/driver"

# Update Labels
LABEL "name"="SysFlow Collector"
LABEL "vendor"="SysFlow"
LABEL "version"="${VERSION}"
LABEL "release"="${RELEASE}"
LABEL "summary"="The SysFlow Collector monitors and collects system call and event information from hosts and exports them in the SysFlow format using Apache Avro object serialization"
LABEL "description"="The SysFlow Collector monitors and collects system call and event information from hosts and exports them in the SysFlow format using Apache Avro object serialization"
LABEL "io.k8s.display-name"="SysFlow Collector"
LABEL "io.k8s.description"="The SysFlow Collector monitors and collects system call and event information from hosts and exports them in the SysFlow format using Apache Avro object serialization"

# Update License
COPY ./LICENSE.md /licenses/LICENSE.md


#COPY --from=builder /usr/src/falco-${FALCO_LIBS_VERSION} /usr/src/falco-${FALCO_LIBS_VERSION}
COPY --from=builder /build/src/libs/test /usr/bin/sftest
#RUN sed -i -E "s/@DRIVER_VERSION@/\"319368f1ad778691164d33d59945e00c5752cd27\"/" /usr/bin/falco-driver-loader
# copy dependencies
# COPY --from=builder /usr/local/lib/ /usr/local/lib/
# COPY --from=builder /usr/local/sysflow/modules/bin /usr/local/sysflow/modules/bin
# COPY --from=builder ${FALCOPREFIX}/driver/* "${DRIVERPREFIX}${FALCO_LIBS_VERSION}" 
# COPY --from=builder ${MODPREFIX}/lib/*.so* ${MODPREFIX}/lib/
# COPY --from=builder ${MODPREFIX}/bin/ ${MODPREFIX}/bin/
# #RUN ln -s ${MODPREFIX}/bin/falco-driver-loader /usr/bin/falco-driver-loader
# COPY --from=builder ${INSTALL_PATH}/conf/ ${INSTALL_PATH}/conf/
# COPY --from=builder ${INSTALL_PATH}/bin/sysporter ${INSTALL_PATH}/bin/
# COPY ./docker-entry-ubi.sh /usr/local/sysflow/modules/bin/
# #RUN chmod +x /usr/local/sysflow/modules/bin/docker-entrypoint.sh
# #COPY --from=builder /docker-entrypoint.sh /usr/local/sysflow/modules/bin/
# COPY --from=builder /usr/lib/x86_64-linux-gnu/libglog.* /usr/lib/x86_64-linux-gnu/
# COPY --from=builder /usr/lib/x86_64-linux-gnu/libboost* /usr/lib/x86_64-linux-gnu/
# COPY --from=builder /usr/lib/x86_64-linux-gnu/libsnappy* /usr/lib/x86_64-linux-gnu/
# COPY --from=builder /usr/lib/x86_64-linux-gnu/libjsoncpp* /usr/lib/x86_64-linux-gnu/
# COPY --from=builder /usr/lib/x86_64-linux-gnu/libgflags* /usr/lib/x86_64-linux-gnu/
# COPY --from=builder /usr/lib/x86_64-linux-gnu/libunwind.so* /usr/lib/x86_64-linux-gnu/

# # RUN dnf install -y procps net-tools
# # entrypoint
# WORKDIR /usr/local/sysflow/bin/

# ENTRYPOINT ["/usr/local/sysflow/modules/bin/docker-entry-ubi.sh"]
# CMD /usr/local/sysflow/bin/sysporter \
#     ${INTERVAL:+-G} $INTERVAL \
#     ${OUTPUT:+-w} $OUTPUT \
#     ${EXPORTER_ID:+-e} "$EXPORTER_ID" \
#     ${FILTER:+-f} "$FILTER" \
#     ${CRI_PATH:+-p} ${CRI_PATH} \
#     ${CRI_TIMEOUT:+-t} ${CRI_TIMEOUT} \
#     ${SOCK_FILE:+-u} ${SOCK_FILE} \
#     ${SAMPLING_RATE:+-s} ${SAMPLING_RATE} \
#     ${DEBUG:+-d}

#-----------------------
# Stage: Testing
#-----------------------
FROM runtime AS testing

# environment and build args
ARG BATS_VERSION=1.1.0

ARG wdir=/usr/local/sysflow
ENV WDIR=$wdir

ARG INSTALL_PATH=/usr/local/sysflow

# Install extra packages for tests
COPY ./scripts/installUBIDependency.sh /
RUN /installUBIDependency.sh test-extra && rm /installUBIDependency.sh

RUN mkdir /tmp/bats && cd /tmp/bats && \
    wget https://github.com/bats-core/bats-core/archive/v${BATS_VERSION}.tar.gz && \
    tar -xzf v${BATS_VERSION}.tar.gz && rm -rf v${BATS_VERSION}.tar.gz && \
    cd bats-core-${BATS_VERSION} && ./install.sh /usr/local && rm -rf /tmp/bats

# install APIs
COPY modules/sysflow/py3 ${INSTALL_PATH}/utils

RUN cd /usr/local/sysflow/utils && \
    python3 -m pip install .

WORKDIR $wdir
ENTRYPOINT ["/usr/local/bin/bats"]
