name: ubi

on:  
  push:
  workflow_dispatch:
    
env:
  SYSDIG_VERSION: 0.27.1  
  #UBI_VERSION: 8.4-203.1622660121  
  UBI_VERSION: 8.4-206
  BASE_TAG: base-${{ env.SYSDIG_VERSION }}-${{ env.UBI_VERSION }}
  MODS_TAG: mods-${{ env.SYSDIG_VERSION }}-${{ env.UBI_VERSION }}
  DOCKER_REGISTRY_REPOSITORY: sysflowtelemetry/ubi

jobs:              
  ubi:    
    runs-on: ubuntu-latest    
    permissions:
      contents: read
      packages: write
    steps:
      - name: Check package version
        id: checks
        shell: bash
        run: |
          echo "##[set-output name=base_exists;] $(curl --silent -f --head -lL https://hub.docker.com/v2/repositories/${{ env.DOCKER_REGISTRY_REPOSITORY }}/tags/${{ env.BASE_TAG }}/ > /dev/null && echo 1 || echo 0)"          
          echo "##[set-output name=mods_exists;] $(curl --silent -f --head -lL https://hub.docker.com/v2/repositories/${{ env.DOCKER_REGISTRY_REPOSITORY }}/tags/${{ env.MODS_TAG }}/ > /dev/null && echo 1 || echo 0)"                
      - name: Checkout
        uses: actions/checkout@v2
        if: ${{ steps.checks.outputs.base_exists == 0 || steps.checks.outputs.mods_exists == 0 }}
        with:
          submodules: recursive 
          fetch-depth: 0         
      - name: Init modules
        if: ${{ steps.checks.outputs.base_exists == 0 || steps.checks.outputs.mods_exists == 0 }}
        run: make -C modules init              
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        if: ${{ steps.checks.outputs.base_exists == 0 || steps.checks.outputs.mods_exists == 0 }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        if: ${{ steps.checks.outputs.base_exists == 0 || steps.checks.outputs.mods_exists == 0 }}
      # - name: Login to DockerHub
      #   uses: docker/login-action@v1 
      #   if: ${{ steps.checks.outputs.base_exists == 0 || steps.checks.outputs.mods_exists == 0 }}
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v1 
      #   if: ${{ steps.checks.outputs.base_exists == 0 || steps.checks.outputs.mods_exists == 0 }}
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GITHUB_TOKEN }}  
      - name: Set build args
        id: args
        shell: bash
        if: ${{ steps.checks.outputs.base_exists == 0 || steps.checks.outputs.mods_exists == 0 }}
        run: | 
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/*/})"
          echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"  
      - name: Build and push base
        id: base_docker_build        
        uses: docker/build-push-action@v2        
        if: ${{ steps.checks.outputs.base_exists == 0 || steps.checks.outputs.mods_exists == 0 }}
        with:
          push: false
          file: Dockerfile.ubi.amd64
          tags: |
            ${{ env.DOCKER_REGISTRY_REPOSITORY }}:${{ env.BASE_TAG }}
            ghcr.io/ubi:${{ env.BASE_TAG }}
          target: base          
          build-args: |
            UBI_VER=${{ env.UBI_VERSION }}
            BUILD_NUMBER=${{ steps.args.outputs.sha_short }}
            VERSION=${{ steps.args.outputs.branch }}
            RELEASE=${{ steps.args.outputs.sha_short }}                        
          secrets: |
            rhuser=${{ secrets.RH_USERNAME }}
            rhpassword=${{ secrets.RH_PASSWORD }}
      - name: Build and push mods
        id: mods_docker_build        
        uses: docker/build-push-action@v2    
        if: ${{ steps.checks.outputs.base_exists == 0 || steps.checks.outputs.mods_exists == 0 }}    
        with:
          push: false
          file: Dockerfile.ubi.amd64
          tags: |
            ${{ env.DOCKER_REGISTRY_REPOSITORY }}:${{ env.MODS_TAG }}
            ghcr.io/ubi:${{ env.MODS_TAG }}
          target: mods          
          build-args: |
            UBI_VER=${{ env.UBI_VERSION }}
            BUILD_NUMBER=${{ steps.args.outputs.sha_short }}
            VERSION=${{ steps.args.outputs.branch }}
            RELEASE=${{ steps.args.outputs.sha_short }}     
          secrets: |
            rhuser=${{ secrets.RH_USERNAME }}
            rhpassword=${{ secrets.RH_PASSWORD }}
      - name: Image digest
        if: ${{ steps.checks.outputs.base_exists == 0 || steps.checks.outputs.mods_exists == 0 }}
        run: |
          echo ${{ steps.base_docker_build.outputs.digest }}
          echo ${{ steps.mods_docker_build.outputs.digest }}
